1. Is JSX mandatory for React js?
Ans- It is not mandatory to use JSX in React. But JSX make easier to write react application. JSX files contain both JavaScript logic and HTML-like markup (JSX syntax) that define the structure and appearance of React components.
2. Is ES6 mandatory for React Js?
Ans- ES6 is not mandatory for React Js. but it is beneficial as it makes the code more readable and maintainable.
3. {TitleComponent}vs{<TitleComponent />}vs{<TitleComponent></TitleComponent>}in JSX
Ans- The Difference is stated below:
1. {TitleComponent}: This value describes the TitleComponent as a javascript expression or a variable. The {} can embed a javascript expression or a variable inside it.
2. <TitleComponent/> : This value represents a Component that is basically returning Some JSX value. In simple terms TitleComponent a function that is returning a JSX value. A component is written inside the {< />} expression.
3. <TitleComponent></TitleComponent> : <TitleComponent /> and <TitleComponent></TitleComponent> are equivalent only when < TitleComponent /> has no child components. The opening and closing tags are created to include the child components.
4. How can I write comment in JSX?
Ans- To write comments in JSX, we need to wrap them in curly braces.
const toDo = () => {
  return {/* this works */ }
}
Since the contents inside are parsed as JavaScript, this enables us to also do multi-line or single-line comments
{
    /*
      mult-line
      test
    */
  }
  {
      // single-line test
  }
5. What is <React.Fragment>/< React.Fragment> and <></> ?
Ans- React Fragments let you group a list of children without adding extra nodes to the DOM. 
React Fragments allow you to wrap multiple elements without adding an extra DOM element.
function AppLayout () {
  return (
    <React.Fragment>
      <td>Hello World!</td>
      <td>Hello Educative!</td>
    </React.Fragment>
  );
}
You can also use the short syntax for React Fragments, which are simply empty tags: function AppLayout () {
  return (
    <>
      <td>Hello World!</td>
      <td>Hello Educative!</td>
    </>
  );
}
`<>` is the shorthand tag for `React. Fragment` which allows us to group a list of elements without wrapping them in a new node. The only difference between them is that the shorthand version does not support the `key` attribute.
6. What is Virtual Dom?
Ans- The Virtual DOM (VDOM) is a concept used in web development, particularly in libraries and frameworks like React, to optimize the performance of web applications by reducing the number of direct manipulations of the actual DOM
The Virtual DOM is a lightweight copy or abstraction of the real DOM. It's a JavaScript object that mirrors the structure of the actual DOM. Developers can make changes to this Virtual DOM much more efficiently than directly manipulating the real DOM.
7. What is Reconciliation in React?
Ans- After the render phase, React compares the new VDOM with the previous VDOM snapshot (the previous UI state).
React uses a reconciliation algorithm to efficiently identify what has changed between the new and previous VDOMs. It calculates the minimal set of changes needed to update the real DOM to match the new VDOM.The goal of the reconciliation process is to update the UI in a way that reflects the changes in the application's state or props while minimizing the impact on performance
8. What is React Fiber?
Ans- React Fiber is a reimplementation of the React reconciliation algorithm that allows for greater control over the rendering process, better performance, and improved developer tools. React Fiber is a concept of ReactJS that is used to render a system faster and smoother.
9. Why we need keys in react?
Ans- In React, the key prop is used to uniquely identify and track individual elements within an array of components or elements that are rendered dynamically, typically in a list or a collection. Key is a special string attribute that needs to be included when uisng lists of elements. Without key React does not understand the order or uniqueness of each element.
10. Can we use index as key in react?
Ans- We can use index as a key in react. If you don’t have unique key then use index as a key.
11. What is props in React?ways to
Ans- Props are short for properties. It is a React built-in object that stores the value of attributes of a tag and works similarly to HTML attributes. Properties are something which we can pass to the component. Props are just normal agruments to a function. 
12. What is config driven UI?
Ans- In a configuration-driven UI, the layout, styles, and other properties of UI elements are defined in a configuration file or database, which can be easily modified without requiring changes to the codebase.
